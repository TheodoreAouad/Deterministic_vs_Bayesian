
---
version: 1

kind: group

environment:
  resources:
    gpu:
      requests: 1
      limits: 1

hptuning:

  concurrency: 1

  matrix:
    experiment_file:
      values: ["experiments/basic_selective_classification.py"]

    rho:
      values: [-6]

    epoch:
      values: [30]

    batch_size:
      values: [32]

    number_of_tests:
      values: [20]

    loss_type:
      values: ["exp", "uniform", "criterion"]

    std_prior:
      values: [1e-1]

    risk:
      values: [0.01      , 0.02526316, 0.04052632, 0.05578947, 0.07105263,
               0.08631579, 0.10157895, 0.11684211, 0.13210526, 0.14736842,
               0.16263158, 0.17789474, 0.19315789, 0.20842105, 0.22368421,
               0.23894737, 0.25421053, 0.26947368, 0.28473684, 0.3       ]

    delta:
      values: [0.01]

build:
  image: sicara/leto-stack:tf1.13.0rc0-gpu-pipeline0.7.1-chani0.0.8
  build_steps:
    - pip uninstall -y tensorflow-gpu
    - pip uninstall -y tensorboard
    - pip install --no-cache-dir -r requirements.txt
  env_vars:
    - ['LC_ALL', 'C.UTF-8']
    - ['PYTHONPATH', '$PYTHONPATH:/code']

run:
  cmd:
    # Allow to access the mounted data_folder as if it was in ./data
    - ln -s /data/theodorea/data ./data
    # Allow to access the mounted output_folder as if it was in ./output
    - ln -s $POLYAXON_RUN_OUTPUTS_PATH ./output
    # Save experiment script
    - cp {{ experiment_file }} ./output
    # Run the pipeline defined in the pipelines folder
    - python {{ experiment_file }} --rho {{ rho }} --number_of_tests {{ number_of_tests }} --epoch {{ epoch }} --batch_size {{ batch_size }} --loss_type {{ loss_type }} --std_prior {{ std_prior }} --risk {{ risk }} --delta {{ delta }}







